// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/aydinmuzaffer/migration-tool-service/src/migrationtool/domain"
	mock "github.com/stretchr/testify/mock"
)

// PolygonBuilder is an autogenerated mock type for the PolygonBuilder type
type PolygonBuilder struct {
	mock.Mock
}

// Build provides a mock function with given fields:
func (_m *PolygonBuilder) Build() *[]domain.VendorDeliveryAreaPolygonInsertModel {
	ret := _m.Called()

	var r0 *[]domain.VendorDeliveryAreaPolygonInsertModel
	if rf, ok := ret.Get(0).(func() *[]domain.VendorDeliveryAreaPolygonInsertModel); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]domain.VendorDeliveryAreaPolygonInsertModel)
		}
	}

	return r0
}

// PopulateInsertModels provides a mock function with given fields:
func (_m *PolygonBuilder) PopulateInsertModels() {
	_m.Called()
}

// SetPolygonHashes provides a mock function with given fields:
func (_m *PolygonBuilder) SetPolygonHashes() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetPolygonInsertString provides a mock function with given fields:
func (_m *PolygonBuilder) SetPolygonInsertString() {
	_m.Called()
}

// SetVendorListPolygons provides a mock function with given fields: polygons
func (_m *PolygonBuilder) SetVendorListPolygons(polygons []domain.VendorDeliveryAreaPolygonGetModel) {
	_m.Called(polygons)
}

type mockConstructorTestingTNewPolygonBuilder interface {
	mock.TestingT
	Cleanup(func())
}

// NewPolygonBuilder creates a new instance of PolygonBuilder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPolygonBuilder(t mockConstructorTestingTNewPolygonBuilder) *PolygonBuilder {
	mock := &PolygonBuilder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
