// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	gorm "gorm.io/gorm"

	mock "github.com/stretchr/testify/mock"
)

// DBWrapper is an autogenerated mock type for the DBWrapper type
type DBWrapper struct {
	mock.Mock
}

// GetDB provides a mock function with given fields: ctx
func (_m *DBWrapper) GetDB(ctx context.Context) *gorm.DB {
	ret := _m.Called(ctx)

	var r0 *gorm.DB
	if rf, ok := ret.Get(0).(func(context.Context) *gorm.DB); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*gorm.DB)
		}
	}

	return r0
}

type mockConstructorTestingTNewDBWrapper interface {
	mock.TestingT
	Cleanup(func())
}

// NewDBWrapper creates a new instance of DBWrapper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDBWrapper(t mockConstructorTestingTNewDBWrapper) *DBWrapper {
	mock := &DBWrapper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
